// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat.proto

package com.liangke.tcp.packet;

/**
 * <pre>
 **
 * 行情类型
 * </pre>
 *
 * Protobuf enum {@code com.liangke.tcp.packet.QuoteType}
 */
public enum QuoteType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>QUOTE_TYPE_ONE_MIN = 0;</code>
   */
  QUOTE_TYPE_ONE_MIN(0),
  /**
   * <code>QUOTE_TYPE_THREE_MIN = 1;</code>
   */
  QUOTE_TYPE_THREE_MIN(1),
  /**
   * <code>QUOTE_TYPE_FIVE_MIN = 2;</code>
   */
  QUOTE_TYPE_FIVE_MIN(2),
  /**
   * <code>QUOTE_TYPE_FIFTEEN_MIN = 3;</code>
   */
  QUOTE_TYPE_FIFTEEN_MIN(3),
  /**
   * <code>QUOTE_TYPE_THIRTY_MIN = 4;</code>
   */
  QUOTE_TYPE_THIRTY_MIN(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>QUOTE_TYPE_ONE_MIN = 0;</code>
   */
  public static final int QUOTE_TYPE_ONE_MIN_VALUE = 0;
  /**
   * <code>QUOTE_TYPE_THREE_MIN = 1;</code>
   */
  public static final int QUOTE_TYPE_THREE_MIN_VALUE = 1;
  /**
   * <code>QUOTE_TYPE_FIVE_MIN = 2;</code>
   */
  public static final int QUOTE_TYPE_FIVE_MIN_VALUE = 2;
  /**
   * <code>QUOTE_TYPE_FIFTEEN_MIN = 3;</code>
   */
  public static final int QUOTE_TYPE_FIFTEEN_MIN_VALUE = 3;
  /**
   * <code>QUOTE_TYPE_THIRTY_MIN = 4;</code>
   */
  public static final int QUOTE_TYPE_THIRTY_MIN_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @Deprecated
  public static QuoteType valueOf(int value) {
    return forNumber(value);
  }

  public static QuoteType forNumber(int value) {
    switch (value) {
      case 0: return QUOTE_TYPE_ONE_MIN;
      case 1: return QUOTE_TYPE_THREE_MIN;
      case 2: return QUOTE_TYPE_FIVE_MIN;
      case 3: return QUOTE_TYPE_FIFTEEN_MIN;
      case 4: return QUOTE_TYPE_THIRTY_MIN;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<QuoteType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      QuoteType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<QuoteType>() {
          public QuoteType findValueByNumber(int number) {
            return QuoteType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return Chat.getDescriptor().getEnumTypes().get(6);
  }

  private static final QuoteType[] VALUES = values();

  public static QuoteType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private QuoteType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.liangke.tcp.packet.QuoteType)
}

